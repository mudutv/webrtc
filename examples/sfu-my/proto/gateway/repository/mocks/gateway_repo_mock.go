// Code generated by MockGen. DO NOT EDIT.
// Source: git.mudu.tv/streaming/mrtc-gateway/proto/gateway/repository (interfaces: GatewaySvcRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockGatewaySvcRepo is a mock of GatewaySvcRepo interface
type MockGatewaySvcRepo struct {
	ctrl     *gomock.Controller
	recorder *MockGatewaySvcRepoMockRecorder
}

// MockGatewaySvcRepoMockRecorder is the mock recorder for MockGatewaySvcRepo
type MockGatewaySvcRepoMockRecorder struct {
	mock *MockGatewaySvcRepo
}

// NewMockGatewaySvcRepo creates a new mock instance
func NewMockGatewaySvcRepo(ctrl *gomock.Controller) *MockGatewaySvcRepo {
	mock := &MockGatewaySvcRepo{ctrl: ctrl}
	mock.recorder = &MockGatewaySvcRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGatewaySvcRepo) EXPECT() *MockGatewaySvcRepoMockRecorder {
	return m.recorder
}

// CloseStream mocks base method
func (m *MockGatewaySvcRepo) CloseStream(arg0 string) error {
	ret := m.ctrl.Call(m, "CloseStream", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CloseStream indicates an expected call of CloseStream
func (mr *MockGatewaySvcRepoMockRecorder) CloseStream(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseStream", reflect.TypeOf((*MockGatewaySvcRepo)(nil).CloseStream), arg0)
}
